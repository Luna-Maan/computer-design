const x 0
const y 1
const radius 2
const radiusinc 3
const radiussquared 4
const xsquared 5
const error 6
const errornew 7
const temp 8
const temp2 9
const ynew a
const xlimit b
const plotflag c
const input 20
const output 20
const output1 21
const output2 22

; this program draws a circle with <input> (set the value before starting the program) as the value of the radius.
; The y value is always 1 too high so the top pixel(s) of the circle wrap around the top of the screen

copy 1 output2 ; sets the output color to black

copy <input> radius
mult <radius> <radius> radiussquared
add <radius> 1 radiusinc
sub 0 1 temp2
copy <radius> y
add <radius> 1 xlimit
copy 0 plotflag

label xloop
copy ffff error
sub <x> <radius> temp
mult <temp> <temp> xsquared

add <y> 1 y
label yloop
sub <y> <radiusinc> temp
mult <temp> <temp> temp
add <xsquared> <temp> temp
sub <radiussquared> <temp> temp  ;rsquared-(xsquared+(j-rinc)**2)
jumpge <temp> 0 positief         ;absolute waarde berekenen

mult <temp> <temp2> temp

label positief
copy <temp> errornew
jumpge <errornew> <error>  eindy

jumpne <plotflag> 1 skipplot
sub <x> 1 x
copy <x> output
sub <ynew> 1 temp
add <temp> <radius> output1    ; these two lines output the left side of the circle
add <ynew> 1 temp
sub <radiusinc> <temp> output1   ;
sub <radius> <x> temp
mult <temp> 2 temp
add <x> <temp> temp
sub <temp> 1 output              ; mirrors x in x=radius
sub <ynew> 1 temp
add <temp> <radius> output1    ; these two lines output the right side of the circle
add <ynew> 1 temp
sub <radiusinc> <temp> output1   ;
add <x> 1 x
label skipplot
copy 1 plotflag

copy <errornew> error
sub <y> <radiusinc> ynew
sub <y> 1 y
jump yloop

label eindy
copy 0 plotflag
copy <x> output
sub <ynew> 1 temp
add <temp> <radius> output1    ; these two lines output the left side of the circle
add <ynew> 1 temp
sub <radiusinc> <temp> output1   ;
sub <radius> <x> temp
mult <temp> 2 temp
add <x> <temp> temp
sub <temp> 1 output              ; mirrors x in x=radius
sub <ynew> 1 temp
add <temp> <radius> output1   ; these two lines output the right side of the circle
add <ynew> 1 temp
sub <radiusinc> <temp> output1   ;
add <x> 1 x
jumplt <x> <xlimit> xloop
exit